--- 
// @ts-nocheck

export const prerender = true;

import Layout from '../../layouts/Layout.astro';
import Page from '../../components/Page.astro';
import LocationEvent from '../../components/LocationEvent.svelte';
import PublicTransport from '../../components/PublicTransport.svelte';

import { ImageIcon } from 'astro-feather';
import { Image } from 'astro:assets';

import "../../styles/global.css";

import { fetchLocations, fetchLocationEvents } from '../../api/wordpress';
import { responsiveImageSource } from '../../functions/helpers';

export async function getStaticPaths() {
    let locations = await fetchLocations();    
    return locations.map((location) => ({
        params: {
            location: location.slug
        },
        props : {
            excerpt: location.excerpt,
            featured_media: location.featured_media,
            title: location.title,
            address: location.address,
            content: location.content,
            id: location.id,
            lng: location.coordinates.lng,
            lat: location.coordinates.lat
        }
    }));
}

const { excerpt, featured_media, title, address, content, id, lng, lat } = Astro.props;
const locationEvents = await fetchLocationEvents(id);

---

<Layout 
    title={ title }
    description={ excerpt }>

    <Page>
        <div class="page-grid">
            <div class="page-column">
                <hgroup class="box is-title">
                    <p>Location</p>
                    <h1>{ title }</h1>
                </hgroup>

                <div class="box is-meta"> 
                    <div>
                        <p class="subline">Adresse</p>
                        <address>{ address }</address>
                    </div>
                </div>

                { content && 
                    <div class="box">
                        <h3>Info</h3>
                        <p>{ content }</p>
                    </div> 
                }

                <div class="box">
                    <h3>Kommende Events</h3>
                    { locationEvents && locationEvents.map((event) => (
                        event && <LocationEvent name={ event.title } slug={ event.slug } date={ event.date } image={ event.featured_media } />
                    ))}
                </div>
            </div>
            <div class="page-column">
                <figure class="box is-image">
                    { featured_media && <img width="600" height="400" srcset={responsiveImageSource(featured_media)} alt={ title } /> }
                    { !featured_media && <ImageIcon /> }
                </figure>
                <div class="box">
                    <h3>Ã–PNV</h3>
                    <PublicTransport longitude={lng} latitude={lat} client:load/>
                </div>
            </div>
        </article>
    </Page>
</Layout>